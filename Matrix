import java.io.PrintStream;
import java.util.Scanner;

public class Matrix {
    private int rows;
    private int columns;
    private double[][] data;
    private String name;

    public Matrix(int rows, int columns) {
        this.rows = rows;
        this.columns = columns;
        this.data = new double[rows][columns];
    }

    public void setElement(int row, int col, double value) {
        this.data[row][col] = value;
    }

    public double getElement(int row, int col) {
        return this.data[row][col];
    }

    public Matrix add(Matrix mat2) {
        Matrix sum = new Matrix(this.rows, this.columns);

        for(int i = 0; i < sum.rows; ++i) {
            for(int j = 0; j < sum.columns; ++j) {
                sum.data[i][j] = this.data[i][j] + mat2.data[i][j];
            }
        }

        return sum;
    }

    public Matrix multiply(Matrix mat2) {
        Matrix product = new Matrix(this.rows, this.columns);

        for(int i = 0; i < product.rows; ++i) {
            for(int j = 0; j < product.columns; ++j) {
                double pro = 0.0;

                for(int k = 0; k < this.columns; ++k) {
                    pro += this.data[i][k] * mat2.data[k][j];
                }

                product.setElement(i, j, pro);
            }
        }

        return product;
    }

    public Matrix subtract(Matrix mat2) {
        Matrix difference = new Matrix(this.rows, this.columns);

        for(int i = 0; i < difference.rows; ++i) {
            for(int j = 0; j < difference.columns; ++j) {
                difference.data[i][j] = this.data[i][j] - mat2.data[i][j];
            }
        }

        return difference;
    }

    public Matrix transpose() {
        Matrix transposed = new Matrix(this.rows, this.columns);

        for(int i = 0; i < transposed.columns; ++i) {
            for(int j = 0; j < transposed.rows; ++j) {
                transposed.setElement(i, j, this.data[j][i]);
            }
        }

        return transposed;
    }

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        System.out.println("Enter number of rows:");
        int r1 = obj.nextInt();
        System.out.println("Enter number of columns:");
        int c1 = obj.nextInt();
        Matrix mat = new Matrix(r1, c1);
        System.out.println("Enter the values:");

        int i;
        int i;
        for(i = 0; i < r1; ++i) {
            for(i = 0; i < c1; ++i) {
                double v1 = obj.nextDouble();
                mat.setElement(i, i, v1);
            }
        }

        System.out.println("Matrix values:");

        PrintStream var10000;
        double var10001;
        for(i = 0; i < r1; ++i) {
            for(i = 0; i < c1; ++i) {
                var10000 = System.out;
                var10001 = mat.getElement(i, i);
                var10000.print("" + var10001 + " ");
            }

            System.out.println();
        }

        System.out.println("Enter number of rows:");
        int r2 = obj.nextInt();
        System.out.println("Enter number of columns:");
        int c2 = obj.nextInt();
        Matrix mat2 = new Matrix(r2, c2);
        System.out.println("Enter the values:");

        int i;
        for(i = 0; i < r2; ++i) {
            for(i = 0; i < c2; ++i) {
                double v2 = obj.nextDouble();
                mat2.setElement(i, i, v2);
            }
        }

        int i;
        Matrix transposing1;
        if (r1 == r2 && c1 == c2) {
            System.out.println("After matrix addition:");
            System.out.println();
            transposing1 = mat.add(mat2);

            for(i = 0; i < r1; ++i) {
                for(i = 0; i < c1; ++i) {
                    var10000 = System.out;
                    var10001 = transposing1.getElement(i, i);
                    var10000.print("" + var10001 + " ");
                }

                System.out.println();
            }
        } else {
            System.out.println("UNEQUAL ORDER");
        }

        if (c1 == r2) {
            System.out.println("After matrix multiplication:");
            System.out.println();
            transposing1 = mat.multiply(mat2);

            for(i = 0; i < r1; ++i) {
                for(i = 0; i < c1; ++i) {
                    var10000 = System.out;
                    var10001 = transposing1.getElement(i, i);
                    var10000.print("" + var10001 + " ");
                }

                System.out.println();
            }
        } else {
            System.out.print("Unequal order");
        }

        if (r1 == r2 && c1 == c2) {
            System.out.println("After matrix subtraction:");
            System.out.println();
            transposing1 = mat.subtract(mat2);

            for(i = 0; i < r1; ++i) {
                for(i = 0; i < c1; ++i) {
                    var10000 = System.out;
                    var10001 = transposing1.getElement(i, i);
                    var10000.print("" + var10001 + " ");
                }

                System.out.println();
            }
        } else {
            System.out.print("Unequal Order");
        }

        System.out.println("After matrix transpose:");
        System.out.println();
        transposing1 = mat.transpose();

        for(i = 0; i < r1; ++i) {
            for(i = 0; i < c1; ++i) {
                var10000 = System.out;
                var10001 = transposing1.getElement(i, i);
                var10000.print("" + var10001 + " ");
            }

            System.out.println();
        }

        System.out.println("After matrix transpose:");
        System.out.println();
        Matrix transposing2 = mat2.transpose();

        for(i = 0; i < r2; ++i) {
            for(int j = 0; j < c2; ++j) {
                var10000 = System.out;
                var10001 = transposing2.getElement(i, j);
                var10000.print("" + var10001 + " ");
            }

            System.out.println();
        }

    }
}
